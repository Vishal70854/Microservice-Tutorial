
spring:
  datasource:
    url: jdbc:postgresql://localhost:5432/microservice
    username: postgres
    password: root
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
  application:
    name: HOTEL-SERVICE
  config: # importing configuration from configserver(which fetches configuration from github)
    import: optional:configserver:http://localhost:8085  # imported configserver configurations(mention ip and port of config server)
    # spring.config.import= configserver:http://localhost:8085 # other way of importing config client

server:
  port: 8082

# eureka client configuration
#eureka: # since we will get these configurations from configserver that's why commenting it
#  client:
#    fetch-registry: true  # by default these are true
#    register-with-eureka: true  # get registered with eureka server
#    service-url:
#      defaultZone: http://localhost:8761/eureka # it will use this eureka ser url inorder to register with server
#  instance:
#    prefer-ip-address: true # it will prefer ip address whenever it sees the server#


## okta configurations

okta:
  oauth2:
    issuer: https://dev-97753577.okta.com/oauth2/default    # this issuer url is taken from okta developer website(security>API>default>settings>Issuer)
    audience: api://default    # this audience url is taken from okta developer website(security>API>default>settings>Audience)